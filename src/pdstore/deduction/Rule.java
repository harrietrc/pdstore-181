package pdstore.deduction;

import java.util.ArrayList;
import java.util.List;

import pdstore.GUID;
import pdstore.PDChange;
import pdstore.generic.Pairable;

/**
 * A class abstracting a rule for a single triple, now developed specifically for seminaive execution.
 * 
 * All generated triples have isInIndex = true.
 * 
 * @author gweb017
 *
 */
public class Rule <TransactionType extends Comparable<TransactionType>, InstanceType, RoleType extends Pairable<RoleType>>
 {
	// use these GUID constants (generated by pdstore.GUIDGen) for additional
	// roles/elements you may need, e.g. for supporting arbitrary arity
	public final static GUID DUMMY44adf560199c11e2853c842b2b9af4fd = new GUID(
			"44adf560199c11e2853c842b2b9af4fd");
	public final static GUID DUMMY44ae1c70199c11e2853c842b2b9af4fd = new GUID(
			"44ae1c70199c11e2853c842b2b9af4fd");
	public final static GUID DUMMY44ae1c71199c11e2853c842b2b9af4fd = new GUID(
			"44ae1c71199c11e2853c842b2b9af4fd");
	public final static GUID DUMMY44ae1c72199c11e2853c842b2b9af4fd = new GUID(
			"44ae1c72199c11e2853c842b2b9af4fd");

	// A rule applies role. That is, the rule defines the tuples that exist
	// for a role using a view mechanism.
	// When someone queries the role, then a "view listener" for the role is
	// executed that can return tuples for that role.

	// TODO use the following concepts/classes: SparqlViewListener

	// tips: 1. write simple test first 2. start with the simplest case possible
	// 3. write stub for api that is needed by the first simple test
	
	private PDChange head;
	private List<PDChange<TransactionType, InstanceType, RoleType>> body = new ArrayList<PDChange<TransactionType, InstanceType, RoleType>>();

	public PDChange<TransactionType, InstanceType, RoleType> getHead() {
		return head;
	}
	
	public void setHead(PDChange<TransactionType, InstanceType, RoleType> head) {
		this.head = head;
	}
	
	public List<PDChange<TransactionType, InstanceType, RoleType>> getBody() {
		return body;
	}
	
	public void setBody(List<PDChange<TransactionType, InstanceType, RoleType>> body) {
		this.body = body;
	}
	
}
